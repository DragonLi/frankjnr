interface IntChoice [F] = choose : {[F|IntChoice [F|]]Int} -> {[F|IntChoice [F|]]Int} -> Int

alwaysPickLeft: {<IntChoice [E|]>String -> [E|]String}
alwaysPickLeft <choose a b -> k> = alwaysPickLeft (k a!)
alwaysPickLeft x                 = x

alwaysPickRight: {<IntChoice [E|]>String -> [E|]String}
alwaysPickRight <choose a b -> k> = alwaysPickRight (k b!)
alwaysPickRight x                 = x

nondetGreeting: {[G|IntChoice [G|]]String}
nondetGreeting! = case (choose {0} { choose {0} {1} }) { 0 -> "Good morning"
                                                       | 1 -> "Guten Tag" }

main: {[E|]String}
main! = alwaysPickRight nondetGreeting!
